export class Tyrux{#e={};#t="";#n={};constructor(e={}){if(e.headers){let t=e.headers;this.#e={...this.#e,...t}}e.baseURL&&null!=e.baseURL&&""!==e.baseURL&&(this.#t=e.baseURL),this.#n=e}request(e){const t=new XMLHttpRequest;try{e.before?.(t),e.wait?.(t),e.pending?.(t)}catch(t){e.catch?e.catch?.(t.stack??null,t.message):console.error(t)}const n=e.method?e.method.toUpperCase():"GET";let o=e.url??e.route??e.backend,s=this.#t+o,r=null;const a=e.headers?{...this.#e,...e.headers}:this.#e,d=a["Content-Type"]||"";if(e.progress?(t.upload.onprogress=n=>{if(n.lengthComputable){const o=Math.round(n.loaded/n.total*100);e.progress(o,"upload",n,t)}},t.onprogress=n=>{if(n.lengthComputable){const o=Math.round(n.loaded/n.total*100);e.progress(o,"download",n,t)}}):(e.uploading&&(t.upload.onprogress=n=>{if(n.lengthComputable){const o=Math.round(n.loaded/n.total*100);e.uploading(o,"upload",n,t)}}),e.downloading&&(t.onprogress=n=>{if(n.lengthComputable){const o=Math.round(n.loaded/n.total*100);e.downloading(o,"download",n,t)}})),e.data=e?.form?new FormData(document.querySelector(e.form)):e.data??e.request??e.Request??null,e.data instanceof FormData)r=e.data,delete a["Content-Type"];else if(e.data&&"object"==typeof e.data)if("GET"===n){const t=Object.keys(e.data).map(t=>`${encodeURIComponent(t)}=${encodeURIComponent(e.data[t])}`).join("&");s+=(s.includes("?")?"&":"?")+t}else r=d.includes("application/json")?JSON.stringify(e.data):d.includes("application/x-www-form-urlencoded")?Object.keys(e.data).map(t=>`${encodeURIComponent(t)}=${encodeURIComponent(e.data[t])}`).join("&"):e.data;if(e.test&&1==e.test)this.createModal({url:s,method:n,headers:a},r);else{t.open(n,s,!0);for(const e in a)t.setRequestHeader(e,a[e]);t.onreadystatechange=()=>{if(4===t.readyState){let n=t.responseText;if((t.getResponseHeader("Content-Type")||"").includes("application/json"))try{n=JSON.parse(t.responseText)}catch(e){console.warn("Failed to parse JSON response:",e)}if(t.status>=200&&t.status<300){if(e.inspect||1==e.inspect)return void this.inspectModal(n);try{const o=e.response??e.Response??e.ok??e.success??null;o?.(n,t)}catch(t){e.catch?e.catch?.(t.stack??null,t.message):console.error(t)}}else{if(e.inspect||1==e.inspect)return void this.inspectModal(n);e.error||("console"===this.#n.error&&console.error(n.message??t.statusText),"alert"===this.#n.error&&alert(n.message??t.statusText),"log"===this.#n.error&&console.log(n.message??t.statusText)),e.error?.(n,t)}try{e.finally?.(n,t),e.ready?.(n,t),e.done?.(n,t)}catch(t){e.catch?e.catch?.(t.stack??null,t.message):console.error(t)}}},t.send(r)}}createModal({url:e,method:t,headers:n},o){const s=document.getElementById("reqModal");s&&s.remove();const r=document.createElement("div");r.id="reqModal",r.style.cssText="\n        position: fixed;\n        inset: 0;\n        background: rgba(0,0,0,0.6);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        z-index: 999999;\n        font-family: Arial, sans-serif;\n        color: #222;\n    ";let a="";if(o)if("string"==typeof o)try{a=JSON.parse(o)}catch{a=o}else if(o instanceof FormData){const e={};o.forEach((t,n)=>e[n]=t instanceof File?t.name:t),a=e}else if(o instanceof URLSearchParams){const e={};o.forEach((t,n)=>e[n]=t),a=e}else"object"==typeof o&&(a=o);let d=n?JSON.stringify(n,null,2):"â€”",l=`curl -X ${t} "${e}"`;if(n&&"object"==typeof n){n["Content-Type"]="multipart/form-data";for(const e in n)l+=` \\\n  -H "${e}: ${n[e]}"`}if("object"==typeof a)for(const e in a)"object"==typeof a[e]?l+=` \\\n  --form '${e}=@""'`:l+=` \\\n  --form '${e}="${a[e]}"'`;r.innerHTML=`\n      <div align="left" style="font-size: 15px;background: #fff; padding: 20px; width: 600px; max-height: 80vh; overflow:auto; border-radius:10px; box-shadow: 0 5px 25px rgba(0,0,0,0.3); position:relative;">\n        <button id="closeModalBtn" style="position:absolute; top:10px; right:10px; background:transparent; border:none; font-size:20px; font-weight:bold; cursor:pointer; color:#666;">âœ–</button>\n        <h2 style="margin-bottom: 10px; color:#111;">ðŸ“¡ Tyrux Request</h2>\n        <div style="margin-bottom:10px;">\n          <strong style="color:#444;">Method:</strong>\n          <code style="background:#eee; padding:2px 6px; border-radius:4px;">${t}</code>\n        </div>\n        <div style="margin-bottom:10px;">\n          <strong style="color:#444;">URL/Route:</strong>\n          <div style="background:#f6f6f6; padding:8px; border-radius:4px; font-family:monospace; overflow-wrap:anywhere;">${e}</div>\n        </div>\n        <div style="margin-bottom:10px;">\n          <strong style="color:#444;">Headers:</strong>\n          <pre style="background:#f6f6f6; padding:8px; border-radius:4px; font-family:monospace; white-space:pre-wrap; color:#222; max-height:140px; overflow-y:scroll;">${d}</pre>\n        </div>\n        <div style="margin-bottom:10px;">\n          <div style='padding-bottom:10px;'><strong style="color:blue;">Request body:</strong></div>\n          <div id="reqBodyTree" style="line-height: 22px; background:#f6f6f6; padding:8px; border-radius:4px; font-family:monospace; max-height:210px; height:200px; overflow:auto;"></div>\n        </div>\n        <div style="margin-bottom:10px;">\n          <strong style="color:green;">cURL:</strong>\n          <pre id="curlText" style="background:#f0fff0; padding:8px; border-radius:4px; font-family:monospace; white-space:pre-wrap; color:#060; max-height:150px; overflow-y:scroll;">${l}</pre>\n          <button id="copyCurlBtn" style="margin-top:5px; padding:5px 10px; background:#28a745; border:none; border-radius:4px; color:#fff; cursor:pointer;">Copy cURL</button>\n        </div>\n      </div>\n    `,document.body.appendChild(r);const i=document.getElementById("reqBodyTree");"object"==typeof a?i.appendChild(function e(t){if("object"==typeof t&&null!==t){const n=document.createElement("div");n.style.marginLeft="16px";const o=Array.isArray(t);return Object.keys(t).forEach((s,r)=>{const a=document.createElement("div");a.style.fontFamily="monospace";const d=t[s],l=document.createElement("span");l.style.color="#0c851aff",l.textContent=o?`[${r}]`:s;const i=document.createElement("span");if(i.textContent=":","object"==typeof d&&null!==d){const t=document.createElement("span");t.style.cursor="pointer",t.style.color="#9400d3",t.style.marginLeft="4px",t.textContent=Array.isArray(d)?"[]â–¸":"{}â–¸";const n=e(d);n.style.display="none",t.onclick=()=>{"none"===n.style.display?(n.style.display="block",t.textContent=t.textContent.replace("â–¸","â–¾")):(n.style.display="none",t.textContent=t.textContent.replace("â–¾","â–¸"))},a.append(l,i,t),a.appendChild(n)}else{const e=document.createElement("span");e.style.color="string"==typeof d?"#ef6c00":"number"==typeof d?"#2f00ed":"boolean"==typeof d?"#ee009a":"#569cd6",e.textContent=" "+JSON.stringify(d),a.append(l,i,e)}n.appendChild(a)}),n}{const e=document.createElement("span");return e.textContent=JSON.stringify(t),e}}(a)):i.textContent=a||"â€”",document.getElementById("closeModalBtn").onclick=()=>{confirm("Reload window")&&location.reload(),r.remove()},document.getElementById("copyCurlBtn").onclick=()=>{navigator.clipboard.writeText(document.getElementById("curlText").innerText).then(()=>{alert("âœ… cURL copied to clipboard!")})}}inspectModal(e){const t=document.getElementById("inspectModal");t&&t.remove();const n=document.createElement("div");n.id="inspectModal",n.style.cssText="\n        position: fixed;\n        inset: 0;\n        background: rgba(0,0,0,0.6);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        z-index: 1000000;\n    ",n.innerHTML='\n      <div align="left" style="\n        background:white;\n        color:black;\n        padding:0;\n        width:90%;\n        max-width:800px;\n        max-height:80vh;\n        border-radius:10px;\n        font-family:monospace;\n        position:relative;\n        display:flex;\n        flex-direction:column;\n      ">\n        <div style="\n          padding:12px 20px;\n          border-bottom:1px solid #ddd;\n          display:flex;\n          align-items:center;\n          justify-content:space-between;\n          position:sticky;\n          top:0;\n          background:white;\n          z-index:1;\n        ">\n          <h3 style="margin:0; color:black;">ðŸ”Ž Inspect Response</h3>\n          <button id="closeInspectModal" style="\n            background:#ff5555;\n            border:none;\n            color:#fff;\n            font-size:16px;\n            padding:4px 8px;\n            border-radius:4px;\n            cursor:pointer;\n          ">âœ–</button>\n        </div>\n        <div id="inspectJson" style="\n          padding:27px 10px;\n          overflow:auto;\n          flex:1;\n          background: #8080805c;\n          font-size: large;\n        "></div>\n      </div>\n    ',document.body.appendChild(n),document.getElementById("inspectJson").appendChild(function e(t,n="10px 15px"){if("object"==typeof t&&null!==t){const o=document.createElement("div");o.style.marginLeft="16px",o.style.marginRight="16px",o.style.background="#fefbfb",o.style.padding=n,o.style.overflow="auto";const s=Array.isArray(t);return Object.keys(t).forEach((n,r)=>{const a=document.createElement("div");a.style.fontFamily="monospace",a.style.padding="3px 0px";const d=t[n],l=document.createElement("span");l.style.color="#0c851aff",l.textContent=s?`[${r}]`:n;const i=document.createElement("span");if(i.textContent=":","object"==typeof d&&null!==d){const t=document.createElement("span");t.style.cursor="pointer",t.style.color="#9400d3",t.style.marginLeft="4px",t.textContent=Array.isArray(d)?"[]â–¸":"{}â–¸";const n=e(d,"3px 15px");n.style.display="none",t.onclick=()=>{"none"===n.style.display?(n.style.display="block",t.textContent=t.textContent.replace("â–¸","â–¾")):(n.style.display="none",t.textContent=t.textContent.replace("â–¾","â–¸"))},a.append(l,i,t),a.appendChild(n)}else{const e=document.createElement("span");e.style.color="string"==typeof d?"#ef6c00":"number"==typeof d?"#2f00ed":"boolean"==typeof d?"#ee009a":"#569cd6",e.textContent=" "+JSON.stringify(d),a.append(l,i,e)}o.appendChild(a)}),o}{const e=document.createElement("span");return e.textContent=JSON.stringify(t),e}}(e)),document.getElementById("closeInspectModal").onclick=()=>n.remove()}post(e){e.method="POST",this.request(e)}put(e){e.method="PUT",this.request(e)}get(e){e.method="GET",this.request(e)}patch(e){e.method="PATCH",this.request(e)}delete(e){e.method="DELETE",this.request(e)}head(e){e.method="HEAD",this.request(e)}option(e){e.method="OPTIONS",this.request(e)}}